#include "SymbolHelper.h"
#include <iostream>
#include "DacHelper.h"

COMPILER MIEC

  
CHARACTERS
    LETTER = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
    DIGIT = "0123456789".
    CR = "\n".
    LF = "\r".
    TAB = "\t".
     
TOKENS
    LPAREN = "(".
    RPAREN = ")".
    SEMICOLON = ";".
    COLON = ":".
    ASSIGN = ":=".
    PLUS = "+".
    MINUS = "-".
    TIMES = "*".
    DIVIDE = "/".
    RELOP = "=" | "<" | ">" | "<=" | ">=" | "!=".
    IDENT = LETTER {LETTER | DIGIT | "_"}.
    PRINT = "print".
    IF_WORD = "IF".
    THEN_WORD = "THEN".
    ELSE_WORD = "ELSE".
    WHILE_WORD = "WHILE".
    DO_WORD = "DO".
    BEGIN_WORD = "BEGIN".
    END_WORD = "END".
    BEGIN_VAR = "BEGIN_VAR".
    END_VAR = "END_VAR".
    NUMBER = DIGIT {DIGIT}.
    TYPES = "Integer".
    PROGRAM = "PROGRAM".
    
COMMENTS
  FROM "(*" TO "*)" NESTED

IGNORE CR + LF + TAB
   
PRODUCTIONS

    FACT = IDENT  | NUMBER (. SH::addConstSymbol(coco_string_create_char(t->val)); .).
    FACT2 = FACT (. dach::fac(t); .) | LPAREN (. dach::lpr(); .) EXPR RPAREN (. dach::rpr(); .).
    TERM = FACT2 {(TIMES | DIVIDE) (. dach::fop(t); .) FACT2 } .
    EXPR = TERM {(PLUS | MINUS) (. dach::top(t); .) TERM}.
    CONDITION = EXPR RELOP (. dach::rop(t); .) EXPR.
    PRINT_STMNT = PRINT(. dach::prt();.) LPAREN EXPR RPAREN SEMICOLON (. dach::sem(t); .) .
    ASSIGNMENT_STMNT = IDENT (. dach::ass(t); .) ASSIGN EXPR SEMICOLON (. dach::sem(t); .) .
    WHILE_STMNT = WHILE_WORD (. dach::wle();.) CONDITION DO_WORD (. dach::doo();.) STMNT END_WORD (. dach::wend();.). 
    STMNT = ASSIGNMENT_STMNT 
    | PRINT_STMNT
    | WHILE_STMNT 
    | IF_WORD (. dach::iff(); .) CONDITION THEN_WORD (. dach::thn(); .) STMNT [ELSE_WORD (. dach::els(); .) STMNT] END_WORD (. dach::ifend(); .).
    VARDECL = BEGIN_VAR {IDENT (. SH::addVarSymbol(coco_string_create_char(t->val)); std::wcout<<la->val;.) COLON TYPES SEMICOLON} END_VAR.
    MIEC = PROGRAM IDENT [VARDECL] BEGIN_WORD {STMNT} END_WORD (. dach::end(); .).

END MIEC .